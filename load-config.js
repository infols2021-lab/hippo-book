// load-config.js - –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å –ø–æ–ª–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
(function() {
    console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è)...');
    
    const CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞
    const now = Date.now();

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫—ç—à
    function saveToCache(config) {
        try {
            localStorage.setItem('edu-keys-config', JSON.stringify(config));
            localStorage.setItem('edu-keys-config-time', now.toString());
            console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫—ç—à');
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫—ç—à:', e.message);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è
    function setConfig(config, source) {
        window.SUPABASE_URL = config.SUPABASE_URL;
        window.SUPABASE_ANON_KEY = config.SUPABASE_ANON_KEY;
        console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑: ${source}`);
        window.dispatchEvent(new CustomEvent('configLoaded', { 
            detail: { source, config }
        }));
    }

    // –ò—Å—Ç–æ—á–Ω–∏–∫ 1: –ö—ç—à localStorage (—Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π)
    try {
        const cachedConfig = localStorage.getItem('edu-keys-config');
        const cacheTime = localStorage.getItem('edu-keys-config-time');
        
        if (cachedConfig && cacheTime && (now - parseInt(cacheTime)) < CACHE_DURATION) {
            const config = JSON.parse(cachedConfig);
            setConfig(config, 'cache');
        }
    } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫—ç—à–∞:', e.message);
    }

    // –ò—Å—Ç–æ—á–Ω–∏–∫ 2: –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ)
    if (!window.SUPABASE_URL || !window.SUPABASE_ANON_KEY) {
        const fallbackConfig = {
            SUPABASE_URL: 'https://dtjhlanmwjpdcdxgzzyo.supabase.co',
            SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR0amhsYW5td2pwZGNkeGd6enlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY4MDUwOTIsImV4cCI6MjA3MjM4MTA5Mn0.jS4DXQSOBawRFtnzjsmF5AzzltDYAG0AXrwrY1B0UpY'
        };
        setConfig(fallbackConfig, 'fallback');
        saveToCache(fallbackConfig);
    }

    // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–≤ —Ñ–æ–Ω–µ)
    
    // –ò—Å—Ç–æ—á–Ω–∏–∫ 3: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (window.SUPABASE_URL && window.SUPABASE_ANON_KEY && 
        !localStorage.getItem('config-checked-globals')) {
        const globalConfig = {
            SUPABASE_URL: window.SUPABASE_URL,
            SUPABASE_ANON_KEY: window.SUPABASE_ANON_KEY
        };
        setConfig(globalConfig, 'globals');
        saveToCache(globalConfig);
        localStorage.setItem('config-checked-globals', 'true');
    }

    // –ò—Å—Ç–æ—á–Ω–∏–∫ 4: API endpoint
    fetch('/api/config')
        .then(response => {
            if (!response.ok) throw new Error('API not available');
            return response.text();
        })
        .then(jsCode => {
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ API
            try {
                const originalURL = window.SUPABASE_URL;
                const originalKEY = window.SUPABASE_ANON_KEY;
                
                eval(jsCode);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                if (window.SUPABASE_URL !== originalURL || window.SUPABASE_ANON_KEY !== originalKEY) {
                    const apiConfig = {
                        SUPABASE_URL: window.SUPABASE_URL,
                        SUPABASE_ANON_KEY: window.SUPABASE_ANON_KEY
                    };
                    setConfig(apiConfig, 'api');
                    saveToCache(apiConfig);
                    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ API');
                }
            } catch (error) {
                console.log('API config evaluation failed:', error.message);
            }
        })
        .catch(error => {
            console.log('API config not available:', error.message);
        });

    // –ò—Å—Ç–æ—á–Ω–∏–∫ 5: –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π config.js
    if (!window.configStaticLoaded) {
        const script = document.createElement('script');
        script.src = '/config.js?' + Date.now(); // –î–æ–±–∞–≤–ª—è–µ–º timestamp –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫—ç—à–∞
        script.onload = function() {
            if (window.SUPABASE_URL && window.SUPABASE_ANON_KEY) {
                const staticConfig = {
                    SUPABASE_URL: window.SUPABASE_URL,
                    SUPABASE_ANON_KEY: window.SUPABASE_ANON_KEY
                };
                setConfig(staticConfig, 'static');
                saveToCache(staticConfig);
                console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ static config');
            }
            window.configStaticLoaded = true;
        };
        script.onerror = function() {
            console.log('Static config not available');
            window.configStaticLoaded = true;
        };
        document.head.appendChild(script);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
    window.checkConfig = function() {
        const configValid = window.SUPABASE_URL && window.SUPABASE_ANON_KEY;
        console.log('üîß Configuration check:', {
            SUPABASE_URL: window.SUPABASE_URL ? '‚úÖ' : '‚ùå',
            SUPABASE_ANON_KEY: window.SUPABASE_ANON_KEY ? '‚úÖ' : '‚ùå',
            valid: configValid
        });
        return configValid;
    };

    // –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    setTimeout(() => {
        if (!window.checkConfig()) {
            console.error('‚ùå Critical: Supabase configuration is missing!');
        } else {
            console.log('‚úÖ Configuration loaded successfully!');
        }
    }, 100);

})();